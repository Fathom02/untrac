#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
import pandas as pd
import matplotlib.pyplot as plt

def main():
    ap = argparse.ArgumentParser(description="Plot UnTrac-Inv influence bar chart from CSV.")
    ap.add_argument("--csv", default="untrac_inv_summary.csv", help="Input CSV generated by summarize_untrac_inv.py")
    ap.add_argument("--out", default="untrac_inv_influence_bar.png", help="Output PNG path")
    ap.add_argument("--title", default="Influence (Δ eval loss) - UnTrac-Inv", help="Chart title")
    ap.add_argument("--topk", type=int, default=0, help="If >0, plot only top-k by delta_eval_loss")
    args = ap.parse_args()

    df = pd.read_csv(args.csv)
    if "delta_eval_loss" not in df.columns or "dataset" not in df.columns:
        raise ValueError(f"{args.csv} must contain columns: dataset, delta_eval_loss")

    df = df.sort_values("delta_eval_loss", ascending=False)
    if args.topk and args.topk > 0:
        df = df.head(args.topk)

    plt.figure()
    plt.bar(df["dataset"], df["delta_eval_loss"])
    plt.title(args.title)
    plt.xlabel("Training split")
    plt.ylabel("Δ eval loss")
    plt.xticks(rotation=20, ha="right")

    for i, v in enumerate(df["delta_eval_loss"].values):
        plt.text(i, v, f"{v:.2f}", ha="center", va="bottom", fontsize=8)
    plt.tight_layout()
    plt.savefig(args.out, dpi=150)
    print(f"[OK] Saved chart -> {args.out}")

if __name__ == "__main__":
    main()
